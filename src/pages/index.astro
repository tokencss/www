---
import "../main.css";
import { Code } from "astro/components";
import Logo from "../components/Logo.astro";
import Head from "../components/Head.astro";
import sample from "./_code.txt?raw";
import Footer from "../components/Footer.astro";

const meta = {
  title: "Token CSS",
  description: "Your new favorite way to write CSS âœ¨",
};
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="generator" content={Astro.generator} />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />

    <Head {...meta} />
  </head>

  <body>
    <div>
      <h1 class="visually-hidden">Token CSS</h1>
      <main>
        <Logo />
        <nav>
          <ul>
            <li><a href="https://github.com/tokencss/tokencss">GitHub</a></li>
            <li>
              <a href="https://www.npmjs.com/org/tokencss">npm</a>
            </li>
            <li><a href="https://twitter.com/tokencss">Twitter</a></li>
          </ul>
        </nav>

        <article>
          <div class="note">
            Token CSS is a work-in-progress. Bugs, missing features, and
            breaking changes are expected!
          </div>

          <p>
            Token CSS is a new tool that seamlessly integrates <a
              href="https://design-tokens.github.io/community-group/format/#design-token"
              >Design Tokens</a
            >
            into your development workflow. Conceptually, it is inspired by tools
            like
            <a href="https://tailwindcss.com">Tailwind</a>, <a
              href="https://styled-system.com/">Styled System</a
            >, and many CSS-in-JS libraries that provide tokenized <em
              >constraints</em
            >
            for your styles&mdash;but there's one big difference.
          </p>
          <p>
            <strong
              >Token CSS embraces <code>.css</code> files and <code
                >&lt;style&gt;</code
              > blocks</strong
            >.
          </p>

          <p>
            With Token CSS, you define your tokens in a <a
              href="https://design-tokens.github.io/community-group/format/"
              >standardized format</a
            > using JSON. You author your CSS using token names as values, and they
            are automatically converted to custom properties.
          </p>

          <Code lang="css" code={sample} theme="css-variables" />

          <p>
            Of course, one of the benefits of many CSS-in-JS libraries is that
            they leverage TypeScript to enforce your design constraints. Token
            CSS comes with a <a
              href="https://marketplace.visualstudio.com/items?itemName=tokencss.tokencss-vscode"
              >Visual Studio Code Extension</a
            > that brings Intellisense, hover features, and semantic token highlighting
            to your CSS (or Astro) files&mdash;and many more features are planned!
          </p>

          <p>
            Try it for yourself and let us know what you think <a
              href="https://twitter.com/tokencss">on Twitter</a
            >.
          </p>

          <div class="demo">
            <a
              href="https://stackblitz.com/edit/github-rkyvoe?file=token.config.json,src%2Fpages%2Findex.astro"
              ><svg width="24" height="24" viewBox="0 0 24 24"
                ><path fill="currentColor" d="M13 10h7l-9 13v-9H4l9-13z"></path>
              </svg><span>Open Demo</span>
            </a>
            <a href="https://github.com/tokencss/tokencss"
              ><svg width="24" height="24" viewBox="0 0 24 24"
                ><path
                  fill="currentColor"
                  d="m12 18.26l-7.053 3.948l1.575-7.928L.587 8.792l8.027-.952L12 .5l3.386 7.34l8.027.952l-5.935 5.488l1.575 7.928L12 18.26zm0-2.292l4.247 2.377l-.949-4.773l3.573-3.305l-4.833-.573L12 5.275l-2.038 4.42l-4.833.572l3.573 3.305l-.949 4.773L12 15.968z"
                ></path>
              </svg><span>Star the Repo</span>
            </a>
          </div>

          <hr />

          <p>
            <strong>Want to get involved?</strong> Token CSS is in active development.
            Please visit our <a href="https://github.com/tokencss/tokencss"
              >GitHub</a
            > and open some issues!
          </p>
        </article>
      </main>

      <Footer />
    </div>
    <style>
      body {
        font-family: sans;
        min-height: screen;
        display: flex;
        flex-direction: column;
        color: gray.7;
      }

      main {
        font-size: default;
        padding: md xs;
        display: flex;
        flex-direction: column;
        align-items: center;
        min-height: screen;
        max-width: 65ch;
        margin: 0 auto;
        padding-bottom: 4xl;
      }
      nav {
        margin-top: calc(lg * -1);
        margin-bottom: 3xl;
      }
      nav > ul {
        list-style: none;
        display: flex;
        gap: sm;
      }

      .note {
        font-family: mono;
        font-size: sm;
        background: orange.0;
        color: orange.9;
        border-radius: md;
        padding: sm lg;
      }

      code {
        font-family: mono;
        background: gray.2;
        border-radius: md;
        padding: 2px 2xs;
      }

      article > * {
        padding: 0 lg;
        line-height: 1.5;
      }

      article > * + * {
        margin-top: sm;
      }

      hr {
        margin: 4xl 0;
        padding: 0 lg;
        border: none;
        --color: gray.1;
        border-bottom: 4px solid var(--color);
      }

      a {
        color: inherit;
        text-decoration: none;
        border-bottom: 1px solid currentColor;
      }

      a:is(:hover, :focus) {
        color: orange.9;
        background: orange.0;
      }

      .demo {
        padding-top: lg;
        padding-bottom: lg;
        display: flex;
        gap: md;

        & a {
          font-weight: 700;
          display: flex;
          gap: xs;
          align-items: center;
          border: 1px solid blue.4;
          box-shadow: lg;
          background: blue.6;
          color: white;
          padding: sm;
          border-radius: md;

          &:last-child {
            border-color: gray.9;
            border-width: 2px;
            background: transparent;
            color: gray.9;
          }
        }
      }

      .visually-hidden {
        clip: rect(0 0 0 0);
        clip-path: inset(50%);
        height: 1px;
        overflow: hidden;
        position: absolute;
        white-space: nowrap;
        width: 1px;
      }
    </style>
  </body>
</html>
